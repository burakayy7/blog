---
navigation: true
cover: assets/images/AutoCorr/ACmain.png
title: What are ARIMA models and how do they work? 
date: 2024-02-25
class: post-template
tags: arima
layout: post
current: post
subclass: 'post'
---

Here, we will learn what ARIMA models are, how they work, and how they can be useful; we will also implement an ARIMA model using open-source libraries!

As in the previous lessons, you probably learned what Autocorrelation is and how it works. Well, the idea of autocorrelation can come in useful when we are talking about predicting a certain function. Please also make sure that you have read the Gradient Descent lesson and/or 
have a solid understanding of Linear Regression.

So what, if any, does ARIMA stand for? 

ARIMA stands for an **A**uto**R**egressive, **I**ntegrated, **M**oving **A**verage. But what do each of these terms mean?

## Autoregression
We can take the fundamental theory of autocorrelation and combine it with the ideas of Regression & Gradient Descent and arrive at something called Autoregression. 
In simple words, autoregression is like linear regression, but it runs the regression algorithm on sections of data, at once, unlike a linear regression, which runs a regression in a pair of values.

In equation terms:
$$
    y_t = \phi_1 \cdot y_{t-1} + \phi_2 \cdot y_{t-2} + ... + \phi_p \cdot y_{t-p} \tag{1}
$$

This basically means that the current y value will equal some relationship between the past p-lagged values. But what do I mean when I say *lagged*? Well, all I mean by that is the past p values, where p can be any number greater than zero, but less than (or equal to) n (the length of the data). Can you see why we call it *lags*?

What equation 1 represents, is something called an AR(p) model, or an autoregressive model of order p. Simply put, this is basically a multiple regression model. 


## Integration

I hope you viewed the previous lesson on Stationary time series and differencing. In this context, Integrating means to make a non-stationary time series, stationary via differencing (again, if you are confused, please view the previous lesson).

## Moving Average

As you were probably introduced to in Parts 1 and 2 for Autocorrelations, you should know what a moving average model is and how to implment one. 





### Using Python Libraries for Time Series Forecasting
Before we go on to make our own ARIMA model, I wanted to quickly show you how you can use open-source libraries to deploy an ARIMA (or other forecasting models) model. 


